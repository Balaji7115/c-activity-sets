PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04> git push
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 817 bytes | 817.00 KiB/s, done.
Total 5 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Balaji7115/c-activity-sets.git
   12f490f..d889610  main -> main
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04> gcc -g -O0 problem01.c
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04\a.exe...done.
(gdb) r
Starting program: C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04/a.exe 
[New Thread 2260.0x213c]
[New Thread 2260.0x2938]
Enter the first fraction (numerator denominator): 1
4
Enter the second fraction (numerator denominator): 1
2
1/4 + 1/2 = 6/8
[Inferior 1 (process 2260) exited normally]
(gdb) l
1       #include <stdio.h>
2
3       void input(int *num1, int *den1, int *num2, int *den2);
4       void add(int num1, int den1, int num2, int den2, int *res_num, int *res_den);
5       void output(int num1, int den1, int num2, int den2, int res_num, int res_den);
6
7       int main() {
8           int num1, den1, num2, den2, res_num, res_den;
9
10          input(&num1, &den1, &num2, &den2);
(gdb) l
11          add(num1, den1, num2, den2, &res_num, &res_den);
12          output(num1, den1, num2, den2, res_num, res_den);
13
14          return 0;
15      }
16
17      void input(int *num1, int *den1, int *num2, int *den2) {
18          printf("Enter the first fraction (numerator denominator): ");
19          scanf("%d %d", num1, den1);
20          
(gdb) l
21          printf("Enter the second fraction (numerator denominator): ");
22          scanf("%d %d", num2, den2);
23      }
24
25      void add(int num1, int den1, int num2, int den2, int *res_num, int *res_den) {
26          *res_num = num1 * den2 + num2 * den1;
27          *res_den = den1 * den2;
28      }
29
30      void output(int num1, int den1, int num2, int den2, int res_num, int res_den) {
(gdb) l
31          printf("%d/%d + %d/%d = %d/%d\n", num1, den1, num2, den2, res_num, res_den);
32      }
(gdb) q
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set04> 