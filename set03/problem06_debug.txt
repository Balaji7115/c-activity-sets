PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03> gcc -g -O0 problem06.c 
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03> gdb a.exe
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03\a.exe...done.
(gdb) l
4       void input_string(char* a, char* b);
5       int sub_str_index(char* string, char* substring);
6       void output(char *string, char *substring, int index);
7
8       int main() {
9           char string[100], substring[100];
10          int index;
11
12
13          input_string(string, substring);
(gdb) l
14
15          index = sub_str_index(string, substring);
16
17          output(string, substring, index);
18
19          return 0;
20      }
21
22      void input_string(char* a, char* b) {
23          printf("Enter the string: ");
(gdb) l
24          scanf("%s", a);
25          printf("Enter the substring: ");
26          scanf("%s", b);
27      }
28
29      int sub_str_index(char* string, char* substring) {
30          int string_length = strlen(string);
31          int substring_length = strlen(substring);
32
33          for (int i = 0; i <= string_length - substring_length; i++) {
(gdb) l
34              int j;
35              for (j = 0; j < substring_length; j++) {
36                  if (string[i + j] != substring[j])
37                      break;
38              }
39              if (j == substring_length)
40                  return i;
41          }
42          return -1;
43      }
(gdb) l
44
45      void output(char *string, char *substring, int index) {
46          if (index != -1)
47              printf("The substring '%s' is found in '%s' at index %d.\n", substring, string, index);
48          else
49              printf("The substring '%s' is not found in '%s'.\n", substring, string);
50      }
(gdb) l
Line number 51 out of range; problem06.c has 50 lines.
(gdb) q
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03> 