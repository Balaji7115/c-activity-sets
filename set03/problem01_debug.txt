PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03> gcc -g -O0 problem01.c 
PS C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03> gdb a.exe 
GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03\a.exe...done.
(gdb) r
Starting program: C:\Users\Acer\Documents\c\c-activity-sets\c-activity-sets\set03/a.exe 
[New Thread 7412.0x1514]
[New Thread 7412.0xe20]
Enter coordinates of point 1 (x1 y1): 1
1
Enter coordinates of point 2 (x2 y2): 2
2
Distance between (1.00, 1.00) and (2.00, 2.00) is: 1.41
[Inferior 1 (process 7412) exited normally]
(gdb) l
4       // Function declarations
5       void input(float *x1, float *y1, float *x2, float *y2);
6       float find_distance(float x1, float y1, float x2, float y2);
7       void output(float x1, float y1, float x2, float y2, float distance);
8
9       int main() {
10          float x1, y1, x2, y2, distance;
11
12          // Input
13          input(&x1, &y1, &x2, &y2);
(gdb) l
14
15          // Calculate distance
16          distance = find_distance(x1, y1, x2, y2);
17
18          // Output
19          output(x1, y1, x2, y2, distance);
20
21          return 0;
22      }
23
(gdb) l
24      // Function to input coordinates of two points
25      void input(float *x1, float *y1, float *x2, float *y2) {
26          printf("Enter coordinates of point 1 (x1 y1): ");
27          scanf("%f %f", x1, y1);
28
29          printf("Enter coordinates of point 2 (x2 y2): ");
30          scanf("%f %f", x2, y2);
31      }
32
33      // Function to calculate distance between two points
(gdb) l
34      float find_distance(float x1, float y1, float x2, float y2) {
35          return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));
36      }
37
38      // Function to output the result
39      void output(float x1, float y1, float x2, float y2, float distance) {
40          printf("Distance between (%.2f, %.2f) and (%.2f, %.2f) is: %.2f\n", x1, y1, x2, y2, distance);
41      }
(gdb) l
Line number 42 out of range; problem01.c has 41 lines.
(gdb) q